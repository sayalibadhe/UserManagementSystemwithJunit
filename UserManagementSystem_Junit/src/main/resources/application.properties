## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)

spring.datasource.url = jdbc:mysql://localhost:3306/poc1?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username = root
spring.datasource.password = root

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = create

# Keep the connection alive if idle for a long time (needed in production)
##spring.datasource.testWhileIdle = true
##spring.datasource.validationQuery = SELECT 1

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

#Server port also can be changed here in properties file if required as
#server.port=8081

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

#You can specify the log file path using the property shown below. 
#Note that the log file name is spring.log.
logging.path=logs

#You can specify the own log file name using the property shown below
logging.file=logs/MYlog.log

#Spring Boot supports all logger levels such as TRACE, DEBUG,INFO,WARN,ERROR,FATAL,OFF.
#You can define Root logger in the application.properties file as shown below
logging.level.org.springframework.web=INFO

logging.pattern.console=%d{yyyy-MM-dd'T'HH:mm:ss.sss'Z'}] [%C] [%t] [%L] [%-5p] %m%n
logging.pattern.file=%d{yyyy-MM-dd'T'HH:mm:ss.sss'Z'}] [%C] [%t] [%L] [%-5p] %m%n